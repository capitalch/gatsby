{"version":3,"sources":["webpack:///./src/components/showcase/showcase.module.scss","webpack:///./src/components/showcase/showcase.tsx","webpack:///./src/pages/showcase.tsx"],"names":["module","exports","Showcase","allImagesFixed","useGallary","categoriesObject","itemsMeta","forEach","x","category","push","toCategoriesObject","showcaseJson","categoriesObjectKeys","Object","keys","className","styles","showcaseContainer","map","categoriesKey","index","key","heading","item","concat","String","Math","round","mrp","offerPrice","fixed","image","details","name","descr","specs","getDisplayItem","ProductsPage","title","diction","showcase","keywords"],"mappings":"k02BACAA,EAAOC,QAAU,CAAC,SAAW,mCAAmC,SAAW,mCAAmC,QAAU,kCAAkC,QAAU,kCAAkC,KAAO,+BAA+B,kBAAoB,8C,4JCwDjPC,MAlDf,WAAoB,IACRC,EAAmBC,YAAW,YAA9BD,eA4BFE,EA1BN,SAA4BC,GACxB,IAAMD,EAAmB,GAOzB,OANAC,EAAUC,SAAQ,SAAAC,GACVA,EAAEC,WACFJ,EAAiBG,EAAEC,YAAcJ,EAAiBG,EAAEC,UAAY,IAChEJ,EAAiBG,EAAEC,UAAUC,KAAKF,OAGnCH,EAkBmBM,CAAmBC,GAC3CC,EAAiCC,OAAOC,KAAKV,GAiBnD,OAhBa,yBAAKW,UAAWC,IAAOC,mBAC/BL,EAAqBM,KAAI,SAACC,EAAeC,GACtC,OAAO,kBAAC,WAAD,CAAUC,IAAKD,GAClB,yBAAKL,UAAWC,IAAOM,SAAUH,GACjC,yBAAKJ,UAAWC,IAAOR,UAEfJ,EAAiBe,GAAeD,KAAI,SAACX,EAAQa,GACzC,OAxBxB,SAAwBG,EAAWH,GAY/B,MAXoB,KAAKI,OAAOC,OAAOC,KAAKC,OAAOJ,EAAKK,IAAML,EAAKM,YAAcN,EAAKK,IAAM,MAAO,MACtF,yBAAKP,IAAKD,GACnB,6BACI,kBAAC,IAAD,CAAKU,MAAO5B,EAAeqB,EAAKQ,UAEpC,yBAAKhB,UAAWC,IAAOgB,SACnB,yBAAKjB,UAAWC,IAAOiB,MAAOV,EAAKU,MACnC,6BAAMV,EAAKW,OACX,6BAAMX,EAAKY,SAeQC,CAAe7B,EAAGa,a,YChCtCiB,UAPf,WACE,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAKC,MAAOC,EAAQC,SAAUC,SAAUF,EAAQE,WAChD,kBAAC,EAAD,S","file":"component---src-pages-showcase-tsx-5e419746440ef187fa01.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showcase\":\"showcase-module--showcase--3t--a\",\"category\":\"showcase-module--category--14HG5\",\"heading\":\"showcase-module--heading--i3LXp\",\"details\":\"showcase-module--details--3AlzS\",\"name\":\"showcase-module--name--2HFrW\",\"showcaseContainer\":\"showcase-module--showcaseContainer--3Aasa\"};","import React, { Fragment } from 'react';\r\n// import { useShowcase } from '../../hooks/showcase-hook';\r\nimport { useGallary } from '../../hooks/gallary-hook';\r\nimport Img from \"gatsby-image\"\r\nimport showcaseJson from '../../gallaries/showcase/showcase.json';\r\nimport styles from './showcase.module.scss';\r\n\r\nfunction Showcase() {\r\n    const { allImagesFixed } = useGallary('showcase');\r\n    const x = 0;\r\n    function toCategoriesObject(itemsMeta: any[]) {\r\n        const categoriesObject = {};\r\n        itemsMeta.forEach(x => {\r\n            if (x.category) {\r\n                categoriesObject[x.category] || (categoriesObject[x.category] = []);\r\n                categoriesObject[x.category].push(x);\r\n            }\r\n        })\r\n        return categoriesObject;\r\n    }\r\n\r\n    function getDisplayItem(item: any, index: number) {\r\n        const savePercent = ' ('.concat(String(Math.round((item.mrp - item.offerPrice) / item.mrp * 100)), '%)');\r\n        const temp = <div key={index}>\r\n            <div>\r\n                <Img fixed={allImagesFixed[item.image]}></Img>\r\n            </div>\r\n            <div className={styles.details}>\r\n                <div className={styles.name}>{item.name}</div>\r\n                <div>{item.descr}</div>\r\n                <div>{item.specs}</div>\r\n            </div>\r\n        </div>\r\n        return temp;\r\n    }\r\n\r\n    const categoriesObject: any = toCategoriesObject(showcaseJson);\r\n    const categoriesObjectKeys: string[] = Object.keys(categoriesObject);\r\n    const Temp = <div className={styles.showcaseContainer}>\r\n        {categoriesObjectKeys.map((categoriesKey, index) => {\r\n            return <Fragment key={index}> \r\n                <div className={styles.heading}>{categoriesKey}</div>\r\n                <div className={styles.category}>\r\n                    {\r\n                        categoriesObject[categoriesKey].map((x: any, index: number) => {\r\n                            return getDisplayItem(x, index);\r\n                        })\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        })\r\n        }\r\n    </div>\r\n\r\n    return Temp;\r\n}\r\n\r\nexport default Showcase;\r\n\r\n/*\r\n\r\n                {<p>\r\n                    <span className={styles.price}>\r\n                        {getFormattedCurrency(item.offerPrice)}\r\n                    </span>\r\n                    <del className={styles.mrp}>\r\n                        {getFormattedCurrency(item.mrp)}\r\n                    </del>\r\n                    <span className={styles.save}>\r\n                        Save {getFormattedCurrency(item.mrp - item.offerPrice)}{savePercent}\r\n                    </span>\r\n                </p> }\r\n// function getItemFluid(fluid: any, imageJson: any, index: number) {\r\n    //     const savePercent = ' ('.concat(String(Math.round((imageJson.mrp - imageJson.offerPrice) / imageJson.mrp * 100)), '%)');\r\n    //     return <div className={styles.product} key={index}>\r\n    //         <div className={styles.picture}><Img fluid={fluid} ></Img></div>\r\n    //         <div className={styles.details}>\r\n    //             <div>{imageJson.name}</div>\r\n    //             <div>{imageJson.descr}</div>\r\n    //             <div>{imageJson.specs}</div>\r\n    //             <p>\r\n    //                 <span className={styles.offerPrice}>\r\n    //                     {getFormattedCurrency(imageJson.offerPrice)}\r\n    //                 </span>\r\n    //                 <del className={styles.mrp}>\r\n    //                     {getFormattedCurrency(imageJson.mrp)}\r\n    //                 </del>\r\n    //                 <span className={styles.save}>\r\n    //                     Save {getFormattedCurrency(imageJson.mrp - imageJson.offerPrice)}{savePercent}\r\n    //                 </span>\r\n    //             </p>\r\n    //         </div>\r\n    //     </div>\r\n    // }\r\n\r\n    // function getAllItems() {\r\n    //     const allItems: any[] = [];\r\n    //     Object.keys(allImagesFixed).forEach((x: any, index: number) => {\r\n    //         allItems.push(\r\n    //             <div key={index} style={{ width: '436px', height: '326px' }}><Img fluid={allImagesFixed[x]}></Img></div>\r\n    //         )\r\n    //     });\r\n    //     return allItems;\r\n    // }\r\n\r\n\r\n\r\n        { <h2>Rack1</h2>\r\n        <div className={styles.rack}>\r\n            {\r\n                getAllItems().map(x => x)\r\n            }\r\n        </div> }\r\n        { <h2>Rack2</h2>\r\n        <div className={styles.rack}>\r\n            {\r\n                getAllItems().map(x => x)\r\n            }\r\n        </div>\r\n        <h2>Rack3</h2>\r\n        <div className={styles.rack}>\r\n            {\r\n                getAllItems().map(x => x)\r\n            }\r\n        </div>\r\n        <h2>Rack4</h2>\r\n        <div className={styles.rack}>\r\n            {\r\n                getAllItems().map(x => x)\r\n            }\r\n        </div>}\r\n\r\n*/\r\n","import React from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport Showcase from \"../components/showcase/showcase\";\r\nimport diction from '../diction.json'\r\n\r\nfunction ProductsPage() {\r\n  return <Layout>\r\n    <SEO title={diction.showcase} keywords={diction.keywords} />\r\n    <Showcase></Showcase>\r\n  </Layout>\r\n}\r\n\r\nexport default ProductsPage"],"sourceRoot":""}